ggplot(data = QR, aes(x = QR$nonfree.sulfur.dioxide)) +
geom_histogram(bins = 70) +
scale_x_log10()
# Chunk 13
#sulphates
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(binwidth = 0.01) +
xlim(0.35,1)
#try log10 scales
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.35,1))
#sqrt not as good
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(bins = 100) +
scale_x_sqrt(limits = c(0.35,1))
ggplot(data = QR, aes(x = QR$sulphates, fill = quality)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.35,1)) +
facet_wrap(~quality)
# Chunk 14
QR$Total.additives <- QR$sulphates + QR$chlorides
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(binwidth = 0.01) +
xlim(0.4,1.2)
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.4,1.2))
# Chunk 15
#variables mostlikely to affect quality
ggpairs(subset(QR, select =  c(quality, residual.sugar,sulphates, pH, citric.acid)))
#More variable sthat may impact quality
ggpairs(subset(QR, select =  c(quality, fixed.acidity, volatile.acidity,
chlorides, total.sulfur.dioxide)))
#ggpairs to investigate how different measures of acidity interact
ggpairs(subset(QR, select =  c(fixed.acidity,
volatile.acidity,pH, citric.acid)))
cor.test(QR$quality, QR$residual.sugar)
## Plam : pick top correllatted variable with quality, chart them out and creat heat maps of top quality winages.
as.list(colnames(QR))
length( QR$"chlorides")
length(QR$quality)
QR.corr
QR$"X"
thing <- `colnames<-`(QR, "X")
# Chunk 16
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3)
cor(x = QR$quality, y = QR$citric.acid)
#QR.CA_summary <- QR <%< ?what was the plan here?
# Chunk 17
ggplot(data = QR, aes(x = quality, y = residual.sugar, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.1)
ggplot(data = QR, aes(x = quality, y = residual.sugar, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.1) +
ylim(1,6)
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point()
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point(alpha = 0.2) +
geom_smooth() +
scale_x_continuous(limits = c(1,4))
cor(x = QR$residual.sugar, y = QR$density)
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point(alpha = 0.2) +
scale_x_sqrt() +
ggtitle("density vs sqrt residual sugar")
# Chunk 18
QR.means <- subset(QR, select = -Sweetness)  %>% group_by(quality) %>% summarise_each(funs(mean))
QR.median <- subset(QR, select = -Sweetness) %>%
group_by(quality) %>%
summarise_each(funs(median))
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means)
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means) +
scale_y_continuous(limits = c(0, 0.2))
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means, aes(color = 'mean')) +
geom_line(data = QR.median, aes(color = 'median')) +
scale_y_continuous(limits = c(0, 0.2))
# Chunk 19
ggplot(data = QR, aes(x = quality, y = QR$total.sulfur.dioxide)) +
geom_point(position = 'jitter', alpha = 0.1) +
geom_line(data = QR.means, lineend = 'round', aes(x = quality, y = total.sulfur.dioxide, color = 'Mean'), size = 1.5) +
geom_line(data = QR.median, lineend = 'round', aes(x = quality, y = total.sulfur.dioxide, color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$total.sulfur.dioxide)
# Chunk 20
ggplot(data = QR, aes(x = quality, y = sulphates)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = sulphates, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = sulphates,
color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$sulphates)
# Chunk 21
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$volatile.acidity)
#T test of volatile acidity means for quality buckets 7 and 8.
x = subset(QR, quality = 7)$volatile.acidity
y = subset(QR, quality = 8)$volatile.acidity
t.test(x, y)
#Subset of data for only the most populous quality buckets.
QR.highN <- subset(QR, quality <= 7 & quality >= 5)
ggplot(data = QR.highN, aes(x = volatile.acidity)) +
geom_histogram(binwidth = 0.02) +
xlim(0.1,1) +
facet_wrap(~quality,ncol = 1)
# Chunk 22
#Quality as a factor needed for analysis below:
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0.1,1.2) +
ylim(0,0.8)
cor.test(QR$volatile.acidity, QR$citric.acid)
ggplot(data = QR, aes(x = volatile.acidity, y = sulphates, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0.1,1.2) +
ylim(0.4,1.3)
cor.test(QR$volatile.acidity, QR$sulphates)
ggplot(data = QR, aes(x = citric.acid, y = sulphates, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0,0.8) +
ylim(0.4,1.3)
#Quality back to numeric so other plots still work:
QR$quality <- as.numeric(QR$quality)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Citric Acid',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2)))
QR$quality <- as.numeric(QR$quality)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Citric Acid',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
?scale_color_brewer
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Citric Acid',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'set1',
guide = guide_legend(title = 'Citric Acid',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'qual',
guide = guide_legend(title = 'Citric Acid',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer(type = 'seq')
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3) +
scale_color_brewer()
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'qual',
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq')
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer()
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer()
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq',
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', pallette = 1,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 1,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 2,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 2))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 2,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 3,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 4,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 5,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 6,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 7,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 8,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 9,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 11,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 12,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 21,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 14,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 16,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 17,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 18,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 19,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = citric.acid, y = sulphates, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0,0.8) +
ylim(0.4,1.3)
summary(lm3)
lm1 <- lm(quality ~ -volatile.acidity, data = QR)
lm2 <- update(lm1, ~ . + -citric.acid)
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
QR$quality <- as.numeric(QR$quality)
lm1 <- lm(quality ~ -volatile.acidity, data = QR)
lm2 <- update(lm1, ~ . + -citric.acid)
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
mtable(lm1, lm2, lm3, sdigits = 3)
library(memisc)
mtable(lm1, lm2, lm3, sdigits = 3)
mtable(lm1,lm2,lm3)
QR$quality <- as.numeric(QR$quality)
lm1 <- lm(quality ~ -volatile.acidity, data = QR)
lm2 <- update(lm1, ~ . + -citric.acid)
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
mtable(lm1,lm2,lm3)
summary(lm3)
summary(lm3)
anova(lm1)
mtable(lm1,lm2,lm3)
?mtable
lm1 <- lm(quality ~ I(-volatile.acidity), data = QR)
lm2 <- update(lm1, ~ . + I(-citric.acid))
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
mtable(lm1,lm2,lm3)
mtable(lm1, lm2, lm3, sdigits = 3)
mtable(lm1,lm2,lm3)
mtable(lm1, lm2, lm3, sdigits = 3)
mtable(lm1,lm2,lm3)
mtable(lm1,lm2,lm3, sdigits = 2)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = sulphates)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = citric.acid, y = sulphates, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
xlim(0,0.8) +
ylim(0.4,1.3)
ggplot(data = QR, aes(x = citric.acid, y = sulphates, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0,0.8) +
ylim(0.4,1.3)
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0.1,1.2) +
ylim(0,0.8)
QR$quality <- as.numeric(QR$quality)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = sulphates)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
QR.sub <- subset(QR, volatile.acidity < 1.2)
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = volatile.acidity, color = sulphates)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
QR.sub <- subset(QR, volatile.acidity < 1.2 & sulphates < 1.2)
ggplot(data = QR.sub, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = citric.acid, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
lm1 <- lm(quality ~ I(-volatile.acidity), data = QR.sub)
lm2 <- update(lm1, ~ . + I(-citric.acid))
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
mtable(lm1,lm2,lm3, sdigits = 2)
QR.sub <- subset(QR, volatile.acidity < 1.2 & sulphates < 1 & citric.acid != 0)
ggplot(data = QR.sub, aes(x = quality, y = citric.acid, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
lm1 <- lm(quality ~ I(-volatile.acidity), data = QR.sub)
lm2 <- update(lm1, ~ . + I(-citric.acid))
lm3 <- update(lm2, ~ . + sulphates)
summary(lm3)
anova(lm1)
mtable(lm1,lm2,lm3, sdigits = 2)
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = volatile.acidity, y = pH)) +
geom_point()
ggplot(data = QR, aes(x = volatile.acidity, y = pH, color = citric.acid)) +
geom_point()
ggplot(data = QR, aes(x = citric.acid, y = pH, color = citric.acid)) +
geom_point()
ggplot(data = QR, aes(x = citric.acid, y = pH, color = volatile.acidity)) +
geom_point()
ggplot(data = QR, aes(x = citric.acid, y = pH, color = QR$fixed.acidity)) +
geom_point()
ggplot(data = QR, aes(x = fixed.acidity, y = pH, color = volatile.acidtity)) +
geom_point()
ggplot(data = QR, aes(x = fixed.acidity, y = pH, color = volatile.acidity)) +
geom_point()
ggplot(data = QR, aes(x = fixed.acidity, y = pH, color = citric.acid)) +
geom_point()
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = sulphates)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = citric.acid, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
anova(lm3)
mtable(lm1,lm2,lm3, sdigits = 2)
