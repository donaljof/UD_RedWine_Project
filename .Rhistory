scale_colour_brewer(palette = "YlGnBu") +
xlim(0,0.8) +
ylim(0.4,1.3)
#Quality back to numeric so other plots still work:
QR$quality <- as.numeric(QR$quality)
# Chunk 23
QR.sub <- subset(QR, volatile.acidity < 1.2 & sulphates < 1 & citric.acid != 0)
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = volatile.acidity, color = sulphates)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = sulphates, color = citric.acid)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = citric.acid, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
lm1 <- lm(quality ~ I(-volatile.acidity), data = QR.sub)
lm2 <- update(lm1, ~ . + I(-citric.acid))
lm3 <- update(lm2, ~ . + sulphates)
lm4 <- update(lm3, ~ . + I(-density))
summary(lm3)
anova(lm3)
mtable(lm1,lm2,lm3,lm4, sdigits = 2)
# Chunk 24
ggplot(data = QR.sub, aes(x = quality, y = density, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = density, y = residual.sugar, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu")
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu") +
xlim(0.1,1.2) +
ylim(0,0.8)
ggplot(data = QR, aes(x = density, y = residual.sugar, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu")
ggplot(data = QR, aes(x = density, y = alcohol, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_colour_brewer(palette = "YlGnBu")
ggplot(data = QR.sub, aes(x = quality, y = alchohol, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = alcohol, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = density, color = chlorides)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = density, color = Total.additives)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = density, color = residual.sugar)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = alcohol, color = residual.sugar)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = alcohol, color = pH)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR.sub, aes(x = quality, y = density, color = volatile.acidity)) +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = subset(QR, citric.acid !=0), aes(x = citric.acid)) +
geom_histogram(binwidth = 0.01)
ggplot(data = subset(QR, citric.acid ==0), aes(x = quality)) +
geom_histogram(binwidth = 0.5)
ggplot(data = QR,aes(x = quality)) +
ggtitle('Counts of wine with no citric acid (RED) and containing citric acid (YELLOW) by quality') +
geom_histogram(data = subset(QR, citric.acid != 0),
binwidth = 0.5, fill = 'yellow') +
geom_histogram(data = subset(QR, citric.acid == 0),
binwidth = 0.5, fill = 'red', position = 'stack')
# Chunk 1
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(stats)
library(memisc)
#single line to check if my git hub is syncing properly
# Chunk 2
# Load the Data
#setwd("C:/Users/Donal/Documents/Udacity Docs/Data Analysis with R/Wine Project")
setwd("C:/Users/donaljof/Documents/udacity docs/Data Analysis with R/UD_RedWine_Project")
QR <- read.csv("wineQualityReds.csv")
str(QR)
summary(QR)
#Residual sugar quantile assymetry
print("Ratio of range of 50%-75% quantile range to 25%-50% quantile range showing assymetry of distrbution, skewed towards the higher values of Residual Sugar. ")
Quantile_ratio_sugar <- (quantile(QR$residual.sugar, 3/4) - quantile(QR$residual.sugar, 1/2)) / (quantile(QR$residual.sugar, 1/2) - quantile(QR$residual.sugar, 1/4))
Quantile_ratio_sugar
# Could have created a funtion here but only plan on doing this one more time so CTRL+V will do.
print("Ratio of range of 50%-75% quantile range to 25%-50% quantile range showing assymetry of distrbution, skewed towards the higher values of Alchohol. ")
Quantile_ratio_alcohol <- (quantile(QR$alcohol, 3/4) - quantile(QR$alcohol, 1/2)) / (quantile(QR$alcohol, 1/2) - quantile(QR$alcohol, 1/4))
Quantile_ratio_alcohol
#based on the discrete values of quality, this parameter may be more usefull
# as a factor. This will be completed later if required as calling this now ruins some of the graphs.
#QR$quality <- factor(QR$quality, ordered = TRUE)
# Chunk 3
#Quality distrbution
ggplot(data = QR, aes(x = quality)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq(3,8,1),labels = seq(3,8,1))
# Chunk 4
#Q1 What is X?
ggplot(data = QR, aes(x = QX)) +
geom_histogram(binwidth = 1)
#Appears to be just an index
range(QR$X)
# Chunk 5
#pH histogram
ggplot(data = QR, aes(x = pH)) +
geom_histogram(binwidth = 0.01)
summary(QR$pH)
#does this distribution change whith quality?
ggplot(data = QR, aes(x = pH)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~quality, nrow = 6)
print("Mean pH")
QR %>% group_by(quality) %>% summarise(avg = mean(pH))
print("Median pH")
QR %>% group_by(quality) %>% summarise(median = median(pH))
# Chunk 6
summary(QR$residual.sugar)
#residual sugar distribution
ggplot(data = QR, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1)
#residual sugar histrogram with outliers not visible
ggplot(data = QR, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(limits = c(1,4), breaks = seq(1,4, 0.2))
ggplot(data = QR, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.01) +
scale_x_sqrt(limits = c(1,4), breaks = seq(1,4, 0.2))
QR$Sweetness <- cut(residual.sugar,
breaks = c(0,1,3,5,7,16),
labels = c("Dry", "Off Dry","Sweet", "Port", "Dessert"))
ggplot(data = QR, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~Sweetness)
ggplot(data = subset(QR, Sweetness == "Off Dry"), aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1)
# Chunk 7
#Alchohol histrogram
ggplot(data = QR, aes(x = alcohol)) +
geom_histogram(binwidth = 0.1)
#Alchohol histrograms - new scales not applicable
ggplot(data = QR, aes(x = alcohol)) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(1,20,1), limits = c(9,13))
ggplot(data = QR, aes(x = alcohol)) +
geom_histogram(bins = 50) +
scale_x_sqrt()
ggplot(data = QR, aes(x = alcohol)) +
geom_histogram(bins = 50) +
scale_x_log10()
#alchohol % have direct impact on quality?
ggplot(data = QR, aes(x = alcohol)) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(1,20,1), limits = c(9,13)) +
facet_wrap(~quality)
# Chunk 8
#Density histrogram
ggplot(data = QR, aes(x = density)) +
geom_histogram(binwidth = 0.0001)
ggplot(data = QR, aes(x = density)) +
geom_histogram(binwidth = 0.0002) +
facet_wrap(~quality)
Density.mean <- QR %>% group_by(quality) %>%
summarise(avg_density = mean(density))
Density.median <- QR %>% group_by(quality) %>%
summarise(median_density = median(density))
#Plot below does not yield useful information as changig y axis limits removes the bars completley.
ggplot(data = Density.mean, mapping = aes(x = quality, y = avg)) +
geom_bar(stat = 'identity')
ggplot() +
geom_point(data = Density.mean,
mapping = aes(x = quality, y = avg_density, color = 'Mean Desnity')) +
geom_point(data = Density.median,
mapping = aes(x = quality, y = median_density, color = 'Median Density'))
# Chunk 9
#acidity
summary(QR$fixed.acidity)
ggplot(data = QR, aes(x = QR$fixed.acidity)) +
geom_histogram(binwidth = 0.1)
ggplot(data = QR, aes(x = QR$fixed.acidity)) +
geom_histogram(bins = 50) +
scale_x_log10()
ggplot(data = QR, aes(x = QR$volatile.acidity)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = QR$volatile.acidity)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~quality)
print("Mean Volatile Acidity")
QR %>% group_by(quality) %>% summarise(avg = mean(volatile.acidity))
QR.vinegar <- subset(QR, volatile.acidity > 1.2)
QR.vinegar
# Chunk 10
#citric acid, pretty flat with lots of 0s
ggplot(data = QR, aes(x = QR$citric.acid)) +
geom_histogram(binwidth = 0.01)
# percent 0's
count(subset(QR, citric.acid == 0)) / count(QR)
# histogram for nonzero only
ggplot(data = subset(QR, citric.acid !=0), aes(x = citric.acid)) +
geom_histogram(binwidth = 0.01)
#distribution of zero citric acid across quality bins
ggplot(data = subset(QR, citric.acid ==0), aes(x = quality)) +
geom_histogram(binwidth = 0.5)
#distribution of zero citric acid across quality bins
#with nonzero counts stacked
ggplot(data = QR,aes(x = quality)) +
ggtitle('Counts of wine with no citric acid (RED) and containing citric acid (YELLOW) by quality') +
geom_histogram(data = subset(QR, citric.acid != 0),
binwidth = 0.5, fill = 'yellow') +
geom_histogram(data = subset(QR, citric.acid == 0),
binwidth = 0.5, fill = 'red', position = 'stack')
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means)
View(QR.means)
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid))
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3)
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5)
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid))
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5)
ggplot(data = QR, aes(x = quality, y = citric.acid) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.means, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean'))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 3, y = 0.9,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 4,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
?annotate
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 6,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.3) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid, color = quality)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid, color = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2, aes(color = quality)) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 6, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'mean')) +
annotate("text", x = 5.5, y = 0.9, size = 8,
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'median')) +
annotate("text", x = 5.5, y = 0.9, size = 8, color = 'red'
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2,
aes(x = quality, y = citric.acid, color = 'median')) +
annotate("text", x = 5.5, y = 0.9, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5)
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5) +
annotate("text", x = 5.5, y = 1.2, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$volatile.acidity)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5) +
annotate("text", x = 5.5, y = 1.4, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$volatile.acidity)))
ggplot(data = QR, aes(x = quality, y = citric.acid)) +
geom_boxplot(aes(group = quality)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.median, size = 2, lineend = 'round',
aes(x = quality, y = citric.acid, color = 'median')) +
annotate("text", x = 5.5, y = 0.9, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$citric.acid)))
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5) +
annotate("text", x = 5.5, y = 1.4, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$volatile.acidity)))
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1.2) +
ylim(0,0.8)
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.4, size = 3) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1) +
ylim(0,0.8)
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.3, size = 4) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1) +
ylim(0,0.8)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.3, size = 4) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1) + ylim(0,0.8) +
ggtitle("Map of Quality Over Citric Acid and Volatile Acidity")
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5) +
annotate("text", x = 5.5, y = 1.4, size = 8, color = 'red',
label = paste('R = ', cor(x = QR$quality,
y = QR$volatile.acidity))) +
ggtitle("Red Wine Volatile Acidity Vs Quality Value")
QR$quality <- as.factor(QR$quality)
ggplot(data = QR, aes(x = volatile.acidity, y = citric.acid, color = quality)) +
geom_point(alpha = 0.3, size = 4) +
scale_color_brewer(type = 'seq', palette = 13,
guide = guide_legend(title = 'Quality',
reverse = TRUE,
override.aes = list(alpha = 1, size = 4))) +
xlim(0.1,1) + ylim(0,0.8) +
ggtitle("Map of Quality Over Citric Acid and Volatile Acidity")
install.packages(tidyr)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
install.packages("tidyr")
summary(QR$residual.sugar)
QR$Sweetness <- cut(residual.sugar,
breaks = c(0,1,3,5,7,16),
labels = c("Dry", "Off Dry","Sweet", "Port", "Dessert"))
QR$Sweetness <- cut(QR$residual.sugar,
breaks = c(0,1,3,5,7,16),
labels = c("Dry", "Off Dry","Sweet", "Port", "Dessert"))
QR$Sweetness <- cut(QR$residual.sugar,
breaks = c(0,1,3,5,7,16),
labels = c("Dry", "Off Dry","Sweet", "Port", "Dessert"))
