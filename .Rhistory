# Chunk 1
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(GGally)
library(dplyr)
library(tidyr)
library(plotly)
# Chunk 2
# Load the Data
setwd("C:/Users/Donal/Documents/Udacity Docs/Data Analysis with R/Wine Project")
QR <- read.csv("wineQualityReds.csv")
str(QR)
summary(QR)
#Residual sugar quantile assymetry
print("Ratio of range of 50%-75% quantile range to 25%-50% quantile range showing assymetry of distrbution, skewed towards the higher values of Residual Sugar. ")
Quantile_ratio_sugar <- (quantile(QR$residual.sugar, 3/4) - quantile(QR$residual.sugar, 1/2)) / (quantile(QR$residual.sugar, 1/2) - quantile(QR$residual.sugar, 1/4))
Quantile_ratio_sugar
# Could have created a funtion here but only plan on doing this one more time so CTRL+V will do.
print("Ratio of range of 50%-75% quantile range to 25%-50% quantile range showing assymetry of distrbution, skewed towards the higher values of Alchohol. ")
Quantile_ratio_alcohol <- (quantile(QR$alcohol, 3/4) - quantile(QR$alcohol, 1/2)) / (quantile(QR$alcohol, 1/2) - quantile(QR$alcohol, 1/4))
Quantile_ratio_alcohol
#based on the discrete values of quality, this parameter may be more usefull
# as a factor. This will be completed later if required as calling this now ruins some of the graphs.
#QR$quality <- factor(QR$quality, ordered = TRUE)
# Chunk 3
#Quality distrbution
ggplot(data = QR, aes(x = quality)) +
geom_histogram(binwidth = 0.5) +
scale_x_continuous(breaks = seq(3,8,1),labels = seq(3,8,1))
# Chunk 4
#Q1 What is X?
ggplot(data = QR, aes(x = QR$X)) +
geom_histogram(binwidth = 1)
#Appears to be just an index
range(QR$X)
# Chunk 5
#pH histogram
ggplot(data = QR, aes(x = QR$pH)) +
geom_histogram(binwidth = 0.01)
summary(QR$pH)
#does this distribution change whith quality?
ggplot(data = QR, aes(x = QR$pH)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~quality, nrow = 6)
print("Mean pH")
QR %>% group_by(quality) %>% summarise(avg = mean(pH))
print("Median pH")
QR %>% group_by(quality) %>% summarise(median = median(pH))
# Chunk 6
summary(QR$residual.sugar)
#residual sugar distribution
ggplot(data = QR, aes(x = QR$residual.sugar)) +
geom_histogram(binwidth = 0.1)
#residual sugar histrogram with outliers not visible
ggplot(data = QR, aes(x = QR$residual.sugar)) +
geom_histogram(binwidth = 0.05) +
scale_x_continuous(limits = c(1,4), breaks = seq(1,4, 0.2))
ggplot(data = QR, aes(x = QR$residual.sugar)) +
geom_histogram(binwidth = 0.01) +
scale_x_sqrt(limits = c(1,4), breaks = seq(1,4, 0.2))
QR$Sweetness <- cut(QR$residual.sugar,
breaks = c(0,1,3,5,7,16),
labels = c("Dry", "Off Dry","Sweet", "Port", "Dessert"))
ggplot(data = QR, aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1) +
facet_wrap(~Sweetness)
ggplot(data = subset(QR, Sweetness == "Off Dry"), aes(x = residual.sugar)) +
geom_histogram(binwidth = 0.1)
# Chunk 7
#Alchohol histrogram
ggplot(data = QR, aes(x = QR$alcohol)) +
geom_histogram(binwidth = 0.1)
#Alchohol histrograms - new scales not applicable
ggplot(data = QR, aes(x = QR$alcohol)) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(1,20,1), limits = c(9,13))
ggplot(data = QR, aes(x = QR$alcohol)) +
geom_histogram(bins = 50) +
scale_x_sqrt()
ggplot(data = QR, aes(x = QR$alcohol)) +
geom_histogram(bins = 50) +
scale_x_log10()
#alchohol % have direct impact on quality?
ggplot(data = QR, aes(x = QR$alcohol)) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(breaks = seq(1,20,1), limits = c(9,13)) +
facet_wrap(~quality)
# Chunk 8
#Density histrogram
ggplot(data = QR, aes(x = QR$density)) +
geom_histogram(binwidth = 0.0001)
ggplot(data = QR, aes(x = QR$density)) +
geom_histogram(binwidth = 0.0002) +
facet_wrap(~quality)
Density.mean <- QR %>% group_by(quality) %>%
summarise(avg = mean(density))
Density.median <- QR %>% group_by(quality) %>%
summarise(median = median(density))
#Plot below does not yield useful information as changig y axis limits removes the bars completley.
ggplot(data = Density.mean, mapping = aes(x = quality, y = avg)) +
geom_bar(stat = 'identity')
ggplot() +
geom_point(data = Density.mean,
mapping = aes(x = quality, y = avg, color = 'red')) +
geom_point(data = Density.median,
mapping = aes(x = quality, y = median, color = 'blue'))
# Chunk 9
#acidity
summary(QR$fixed.acidity)
ggplot(data = QR, aes(x = QR$fixed.acidity)) +
geom_histogram(binwidth = 0.1)
ggplot(data = QR, aes(x = QR$fixed.acidity)) +
geom_histogram(bins = 50) +
scale_x_log10()
ggplot(data = QR, aes(x = QR$volatile.acidity)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = QR$volatile.acidity)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~quality)
print("Mean Volatile Acidity")
QR %>% group_by(quality) %>% summarise(avg = mean(volatile.acidity))
QR.vinegar <- subset(QR, volatile.acidity > 1.2)
QR.vinegar
# Chunk 10
#citric acid, pretty flat with lots of 0s
ggplot(data = QR, aes(x = QR$citric.acid)) +
geom_histogram(binwidth = 0.01)
# percent 0's
count(subset(QR, citric.acid == 0)) / count(QR)
# histogram for nonzero only
ggplot(data = subset(QR, citric.acid !=0), aes(x = citric.acid)) +
geom_histogram(binwidth = 0.01)
#distribution of zero citric acid across quality bins
ggplot(data = subset(QR, citric.acid ==0), aes(x = quality)) +
geom_histogram(binwidth = 0.5)
#distribution of zero citric acid across quality bins
#with nonzero counts stacked
ggplot(data = QR,aes(x = quality)) +
ggtitle('Counts of wine with no citric acid (RED) and containing citric acid (YELLOW) by quality') +
geom_histogram(data = subset(QR, citric.acid != 0),
binwidth = 0.5, fill = 'yellow') +
geom_histogram(data = subset(QR, citric.acid == 0),
binwidth = 0.5, fill = 'red', position = 'stack')
# Chunk 11
#chlorides, normal with lots of outliers
ggplot(data = QR, aes(x = QR$chlorides)) +
geom_histogram(binwidth = 0.001)
ggplot(data = QR, aes(x = QR$chlorides)) +
geom_histogram(binwidth = 0.001) +
xlim(c(0.04,0.13))
summary(subset(QR$chlorides, 0.04 <= QR$chlorides & QR$chlorides <= 0.13))
ggplot(data = QR, aes(x = QR$chlorides)) +
geom_histogram(binwidth = 0.001) +
xlim(c(0.04,0.13)) +
facet_wrap(~quality, nrow = 6)
#where are these outliers coming from
high.chlorides <- subset(QR, chlorides > 0.15)
#oultiers have higher sugars, ciric acid and sulphates.
#appear at first glance to be lower quality
HC.delta <- ( summarise_each(high.chlorides, funs(mean)) -
summarise_each(QR, funs(mean)) ) /
summarise_each(QR, funs(sd))
glimpse(HC.delta)
# Chunk 12
#sulfur dioxide
ggplot(data = QR, aes(x = QR$free.sulfur.dioxide)) +
geom_histogram(binwidth = 1)
ggplot(data = QR, aes(x = QR$total.sulfur.dioxide)) +
geom_histogram(binwidth = 1)
ggplot(data = QR, aes(x = QR$free.sulfur.dioxide)) +
geom_histogram(bins = 50) +
scale_x_log10()
ggplot(data = QR, aes(x = QR$total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
scale_x_log10()
#no sqrt distribution, log10 works best
ggplot(data = QR, aes(x = QR$total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
scale_x_sqrt()
#facet wrap, hint a bimodalty for Q = 6
ggplot(data = QR, aes(x = QR$total.sulfur.dioxide)) +
geom_histogram(bins = 70) +
scale_x_log10() +
facet_wrap(~quality)
#non free sulfur dioxide
QR$nonfree.sulfur.dioxide <- QR$total.sulfur.dioxide - QR$free.sulfur.dioxide
ggplot(data = QR, aes(x = QR$nonfree.sulfur.dioxide)) +
geom_histogram(binwidth = 1)
ggplot(data = QR, aes(x = QR$nonfree.sulfur.dioxide)) +
geom_histogram(bins = 70) +
scale_x_log10()
# Chunk 13
#sulphates
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(binwidth = 0.01) +
xlim(0.35,1)
#try log10 scales
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.35,1))
#sqrt not as good
ggplot(data = QR, aes(x = QR$sulphates)) +
geom_histogram(bins = 100) +
scale_x_sqrt(limits = c(0.35,1))
ggplot(data = QR, aes(x = QR$sulphates, fill = quality)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.35,1)) +
facet_wrap(~quality)
# Chunk 14
QR$Total.additives <- QR$sulphates + QR$chlorides
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(binwidth = 0.01)
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(binwidth = 0.01) +
xlim(0.4,1.2)
ggplot(data = QR, aes(x = Total.additives)) +
geom_histogram(bins = 100) +
scale_x_log10(limits = c(0.4,1.2))
# Chunk 15
#variables mostlikely to affect quality
ggpairs(subset(QR, select =  c(quality, residual.sugar,sulphates, pH, citric.acid)))
#More variable sthat may impact quality
ggpairs(subset(QR, select =  c(quality, fixed.acidity, volatile.acidity,
chlorides, total.sulfur.dioxide)))
#ggpairs to investigate how different measures of acidity interact
ggpairs(subset(QR, select =  c(fixed.acidity,
volatile.acidity,pH, citric.acid)))
cor.test(QR$quality, QR$residual.sugar)
## Plam : pick top correllatted variable with quality, chart them out and creat heat maps of top quality winages.
as.list(colnames(QR))
length( QR$"chlorides")
length(QR$quality)
QR.corr
QR$"X"
thing <- `colnames<-`(QR, "X")
# Chunk 16
ggplot(data = QR, aes(x = quality, y = citric.acid, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.3)
cor(x = QR$quality, y = QR$citric.acid)
#QR.CA_summary <- QR <%< ?what was the plan here?
# Chunk 17
ggplot(data = QR, aes(x = quality, y = residual.sugar, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.1)
ggplot(data = QR, aes(x = quality, y = residual.sugar, group = quality)) +
geom_boxplot() +
geom_point(position = 'jitter', alpha = 0.1) +
ylim(1,6)
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point()
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point(alpha = 0.2) +
geom_smooth() +
scale_x_continuous(limits = c(1,4))
cor(x = QR$residual.sugar, y = QR$density)
ggplot(data = QR, aes(x = residual.sugar, y = density)) +
geom_point(alpha = 0.2) +
scale_x_sqrt() +
ggtitle("density vs sqrt residual sugar")
# Chunk 18
QR.means <- subset(QR, select = -Sweetness)  %>% group_by(quality) %>% summarise_each(funs(mean))
QR.median <- subset(QR, select = -Sweetness) %>%
group_by(quality) %>%
summarise_each(funs(median))
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means)
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means) +
scale_y_continuous(limits = c(0, 0.2))
ggplot(data = QR, aes(x = quality, y = chlorides)) +
geom_point(position = 'jitter', alpha = 0.2) +
geom_line(data = QR.means, aes(color = 'mean')) +
geom_line(data = QR.median, aes(color = 'median')) +
scale_y_continuous(limits = c(0, 0.2))
# Chunk 19
ggplot(data = QR, aes(x = quality, y = QR$total.sulfur.dioxide)) +
geom_point(position = 'jitter', alpha = 0.1) +
geom_line(data = QR.means, lineend = 'round', aes(x = quality, y = total.sulfur.dioxide, color = 'Mean'), size = 1.5) +
geom_line(data = QR.median, lineend = 'round', aes(x = quality, y = total.sulfur.dioxide, color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$total.sulfur.dioxide)
# Chunk 20
ggplot(data = QR, aes(x = quality, y = sulphates)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = sulphates, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = sulphates,
color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$sulphates)
# Chunk 21
ggplot(data = QR, aes(x = quality, y = volatile.acidity)) +
geom_point(alpha = 0.3, position = 'jitter') +
geom_line(data = QR.means, lineend = 'round',
aes(x = quality, y = volatile.acidity, color = 'Mean'),
size = 1.5) +
geom_line(data = QR.median, lineend = 'round',
aes(x = quality, y = volatile.acidity,
color = 'Median'), size = 1.5)
cor.test(QR$quality, QR$volatile.acidity)
#T test of volatile acidity means for quality buckets 7 and 8.
x = subset(QR, quality = 7)$volatile.acidity
y = subset(QR, quality = 8)$volatile.acidity
t.test(x, y)
#Subset of data for only the most populous quality buckets.
QR.highN <- subset(QR, quality <= 7 & quality >= 5)
ggplot(data = QR.highN, aes(x = volatile.acidity)) +
geom_histogram(binwidth = 0.02) +
xlim(0.1,1) +
facet_wrap(~quality,ncol = 1)
